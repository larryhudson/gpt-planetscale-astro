---
import * as db from "@src/utils/db";
import Layout from "@src/components/Layout.astro";
import ListLink from "@src/components/ListLink.astro";
import { redirectUserIfNotApproved } from "@src/utils/auth";

const { redirect, user } = await redirectUserIfNotApproved(Astro);
if (redirect) return redirect;

const conversations = await db.getConversationsForUser(user.id);
const systemPrompts = await db.getSystemPromptsForUser(user.id);

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const conversationData = {
    name: formData.get("name") || "Unnamed",
    system_prompt_id: Number(formData.get("system_prompt_id")) || "",
    user_id: user.id,
  } as db.Conversation;

  const newConversationId = await db.createConversation(conversationData);
  return Astro.redirect(`/conversations/${newConversationId}/`);
}
---

<Layout user={user}>
  <h1>Conversations</h1>

  <p>
    Below is your list of conversations. You can start a new conversation using
    the form at the bottom. Before you start your first conversation, you need
    to create a <a href="/system-prompts/">system prompt</a>.
  </p>

  <ul>
    {
      conversations.map((conversation) => (
        <ListLink href={`/conversations/${conversation.id}/`}>
          {conversation.name}
        </ListLink>
      ))
    }
  </ul>

  <h2>Start a new conversation</h2>
  <form method="POST">
    <label for="name">Name</label>
    <input id="name" name="name" />
    <label for="system_prompt_id">Prompt</label>
    <select id="system_prompt_id" name="system_prompt_id">
      {
        systemPrompts.map((systemPrompt) => (
          <option value={systemPrompt.id}>{systemPrompt.content}</option>
        ))
      }
    </select>
    <button type="submit">Create</button>
  </form>
</Layout>

<style>
  textarea {
    width: 100%;
    height: 100px;
    font-family: inherit;
    padding: 0.5rem;
  }

  select {
    width: 100%;
  }

  li {
    margin-bottom: 1rem;
  }

  ul {
    list-style: none;
    padding: 0;
  }
</style>
